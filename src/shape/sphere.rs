////////////////////////////////////////
//  CRATES
////////////////////////////////////////


////////////////////////////////////////
//  MODULES
////////////////////////////////////////


////////////////////////////////////////
//  ALIASES
////////////////////////////////////////

use glm::Vec3;

////////////////////////////////////////
//  GLOBAL FUNCTIONS
////////////////////////////////////////


////////////////////////////////////////
//  STRUCTS DECLARATION
////////////////////////////////////////

pub struct Sphere {
    center: Vec3,
    radius: f32,
}

////////////////////////////////////////
//  STRUCTS IMPLEMENTATION
////////////////////////////////////////

impl Sphere {

    //  instattiate new sphere object
    pub fn new( ctr: Vec3, rad: f32 ) -> Sphere {
        Sphere{ center: ctr, radius: rad }
    }

    //  element getter
    #[inline(always)]
    pub fn center( &self ) -> Vec3 { self.center.clone() }
    #[inline(always)]
    pub fn radius( &self ) -> f32 { self.radius }
}
